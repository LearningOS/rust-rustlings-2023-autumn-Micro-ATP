cargo new *：创建一个新项目
cargo run *:运行项目
cargo run --release *:运行项目
cargo build *：编译
cargo check *：检查
println!("");
! 为宏展开
{:?}  :自动根据变量类型选择适当的打印格式
{}  ：占位符
assert——eq!  用于断言两个表达式的值是否相等
let x =  ;
let mut x = ;

fn main(){

}

let 用于变量，const用于常量；
下面是一个常量声明的例子，其常量名为 MAX_POINTS，值设置为 100,000。（Rust 常量的命名约定是全部字母都使用大写，并使用下划线分隔单词，另外对数字字面量可插入下划线以提高可读性）：
const MAX_POINTS: u32 = 100_000;
u32  u:无符号（非负）整数，32指整数的位数
i32  i:带符号整数（正，负，0）
usize   通常用于表示内存地址、数组索引、机器架构相关的整数值。

变量遮蔽：Rust 允许声明相同的变量名，在后面声明的变量会遮蔽掉前面声明的。
变量遮蔽的用处在于，如果你在某个作用域内无需再使用之前的变量（在被遮蔽后，无法再访问到之前的同名变量），就可以重复的使用变量名字，而不用绞尽脑汁去想更多的名字。

